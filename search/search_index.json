{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Talk To Defuse \u2013 Physical Modular Bomb Defusal Game","text":"<p>\"Keep Talking and Nobody Explodes\" meets real hardware!  An open-source, customizable, modular bomb defusal experience.</p>"},{"location":"#what-is-the-project","title":"What is the Project?","text":"<p>Talk to Defuse is a physical bomb defusal game that gamifies teamwork, communication, and engineering skills. While some players try to defuse the bomb, others provide remote instructions. The project is fully open-source and based on Arduino.</p> <p>Our Goal: To bring together makers, students, and game enthusiasts by offering a fun and educational experience.</p>"},{"location":"#why-this-project","title":"Why This Project?","text":"<ul> <li>Teach solving real-world technical problems in a fun format  </li> <li>Contribute to the open-source community  </li> <li>Provide an exemplary platform for educational processes  </li> <li>Make hardware-software integration enjoyable</li> </ul>"},{"location":"#our-objectives","title":"Our Objectives","text":"<ul> <li>Plug-and-play system with easy setup  </li> <li>Documentation for users of all levels  </li> <li>Continuously updated open development model  </li> <li>Evolution driven by community feedback</li> </ul>"},{"location":"#how-does-it-work","title":"How Does It Work?","text":"<p>The system consists of modules physically connected to each other. Each is controlled by an Arduino microcontroller and connected to the main module via the I2C protocol.</p> <p>Game Process: 1.  The main module starts the timer and sets the number of active modules 2.  Modules activate and tasks begin 3.  Players interact with modules and try to solve problems 4.  The assisting player communicates instructions 5.  If the bomb is defused in time, the team wins</p>"},{"location":"#module-system","title":"Module System","text":"<ul> <li>Plug-and-play design (modules can be easily added or removed)  </li> <li>Independent firmware and I2C communication  </li> <li>Open to community contributions and development</li> </ul> <p>Module software/hardware documentation: Modules</p>"},{"location":"#technical-details","title":"Technical Details","text":"Area Content Hardware Arduino Nano/Uno, I2C, LEDs, buzzer, display, buttons Software Arduino IDE, custom module libraries Docs Technical documentation for all modules Prototyping Breadboard to PCB transition <p>For more technical content: Parts List 3D Models</p>"},{"location":"#community-and-development","title":"Community and Development","text":"<p>Talk to Defuse aims to be an inspiring project among open-source physical games. \ud83d\udc65 Supported by the community, it brings together different disciplines (electronics, software, game design).</p> <p>Contribute here \u2192 Contribution Guide</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>```bash git clone https://github.com/idal777/Talk-To-Defuse cd Talk-To-Defuse mkdocs serve</p>"},{"location":"3dmodels/","title":"3D Models","text":"<p>Below is a list of some 3D printed parts and models used in the project. You can download the files by clicking the links.</p> Part Name Description Download Link Case Cover Main cover of the game case Download Module Body Outer body of the modules Download Button Panel Panel containing buttons Download Switch Module Case Case for the switch module Download Other Parts Other 3D printed parts Download"},{"location":"3dmodels/#printing-instructions","title":"Printing Instructions","text":"<ul> <li>Recommended Material: PLA or ABS  </li> <li>Layer Height: 0.1 - 0.2 mm for better surface finish  </li> <li>Infill: 20-30% depending on strength requirements  </li> <li>Supports: Enable supports for overhangs where necessary  </li> </ul>"},{"location":"3dmodels/#assembly-notes","title":"Assembly Notes","text":"<ul> <li>Ensure all modules fit snugly in the main case.  </li> <li>Use screws or snap-fit designs as per the module specifications.  </li> <li>Refer to the Assembly Guide for detailed steps.  </li> </ul>"},{"location":"3dmodels/#file-formats","title":"File Formats","text":"<ul> <li>Files are primarily provided in <code>.stl</code> format suitable for most 3D printers.  </li> <li>Other formats like <code>.obj</code> or <code>.step</code> may be available upon request or in future releases.  </li> </ul>"},{"location":"3dmodels/#licensing-and-usage","title":"Licensing and Usage","text":"<ul> <li>These 3D models are released under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0).  </li> <li>You may use and modify the files for personal or educational use. Commercial use requires prior permission.  </li> </ul> <p>Note: Links are currently dummy placeholders and will be updated once the real files are uploaded to GitHub or another repository.</p> <p>If you want to contribute new or improved 3D parts, please check the Contribution Guide.</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#project-purpose","title":"Project Purpose","text":"<p>This project is a modular bomb defusal game designed to help users develop electronics, programming, and problem-solving skills by interacting with real-world hardware components.</p> <p>Designed for hackathons, educational workshops, and engineering-focused events, the game challenges players to solve various physical modules in the correct order while racing against time.</p>"},{"location":"about/#vision-and-overview","title":"Vision and Overview","text":"<p>The core vision of this project is to provide a user-friendly, accessible, and open-source solution in the realm of physical game systems and maker culture. It aims to offer an educational and creative experience to developers, students, and gamers alike.</p>"},{"location":"about/#hardware-integration","title":"Hardware Integration","text":"<p>The project is designed to work with the following hardware components:</p> <ul> <li>Arduino (Uno/Nano)  </li> <li>LED Matrix and RGB lights  </li> <li>Buzzer &amp; sound alert systems  </li> <li>Buttons and switches  </li> <li>Accelerometer  </li> <li>Morse code module  </li> <li>Maze and lock systems  </li> </ul> <p>Each module can be developed independently and integrated into the game box, resulting in a flexible system.</p>"},{"location":"about/#software-features","title":"Software Features","text":"<ul> <li>Control software written in Python or C  </li> <li>Serial communication (via USB/Serial with Arduino)  </li> <li>Dynamic timers and difficulty levels  </li> <li>Task engine to verify module solution steps  </li> <li>Web-based or physical screen interface (extendable)  </li> </ul>"},{"location":"about/#why-open-source","title":"Why Open Source?","text":"<p>This project is open source because:</p> <ul> <li>We want to share the learning process with everyone  </li> <li>We are open to community contributions  </li> <li>We support its use and spread in educational environments  </li> </ul>"},{"location":"about/#how-to-contribute","title":"How to Contribute","text":"<p>If you want to contribute to this project:</p> <ul> <li>Fork and submit pull requests via GitHub  </li> <li>Share your ideas for new modules with us  </li> <li>Help with documentation and bug fixes  </li> </ul> <p>GitHub: https://github.com/idal777/Talk-To-Defuse</p>"},{"location":"about/#contact","title":"Contact","text":"<p>For any questions, suggestions, or collaboration:</p> <p>Email: support@bombdefusegame.org  Website: bombdefusegame.org </p>"},{"location":"changelog/","title":"Changelog","text":"<p>This file records all significant version changes and updates of the project. Each release includes new features, improvements, bug fixes, and important notes.</p>"},{"location":"changelog/#100-2025-07-25","title":"[1.0.0] - 2025-07-25","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>First stable release of the project.</li> <li>Basic structure and documentation for modules created.</li> <li>Home page, module introductions, and sales pages added.</li> <li>Circuit diagrams and user manuals for Arduino-based modules included.</li> <li>Sales policies and purchasing terms pages prepared.</li> </ul>"},{"location":"changelog/#improved","title":"Improved","text":"<ul> <li>Documentation structure improved, navigation menu organized.</li> <li>Infrastructure for adding visual content established.</li> <li>MkDocs configuration updated.</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Fixed broken links.</li> <li>Resolved incorrect redirects.</li> </ul>"},{"location":"changelog/#090-2025-06-30","title":"[0.9.0] - 2025-06-30","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Initial draft documentation created.</li> <li>Module descriptions and basic usage guides written.</li> <li>Basic site skeleton prepared with MkDocs configuration.</li> </ul>"},{"location":"changelog/#known-issues","title":"Known Issues","text":"<ul> <li>Images not yet added.</li> <li>Details missing on sales pages.</li> </ul>"},{"location":"changelog/#080-2025-06-01","title":"[0.8.0] - 2025-06-01","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Project plan and roadmap added to documentation.</li> <li>Circuit diagrams prepared for modules.</li> <li>Arduino example codes documented.</li> </ul>"},{"location":"changelog/#notes","title":"Notes","text":"<ul> <li>This file follows the Keep a Changelog standard.</li> <li>Dates use ISO 8601 format (YYYY-MM-DD).</li> <li>Version numbers follow Semantic Versioning (SemVer).</li> </ul>"},{"location":"changelog/#contributors","title":"Contributors","text":"<ul> <li>\u0130dal Boga  </li> <li>\u00d6mer Faruk \u00dcnl\u00fc</li> </ul> <p>This file will be regularly updated to help you track the project's progress and stay informed about new releases.</p>"},{"location":"contributing/","title":"Contribution Guide","text":"<p>Hello!  Thank you for your interest in contributing to this open source project. We welcome contributions at all levels \u2014 whether code, documentation, or feedback.</p>"},{"location":"contributing/#how-can-i-contribute","title":"How Can I Contribute?","text":""},{"location":"contributing/#1-report-bugs","title":"1. Report Bugs","text":"<p>Found a bug? Please open a new Issue and let us know:</p> <ul> <li>Clearly describe how the bug occurs  </li> <li>Include screenshots if possible  </li> <li>Share system details (OS, hardware, etc.)</li> </ul> <p>Create an Issue</p>"},{"location":"contributing/#2-suggest-new-features","title":"2. Suggest New Features","text":"<p>Got an idea for a new module or game feature?</p> <ul> <li>Write a brief but clear description  </li> <li>Specify the type of hardware or software needed  </li> <li>Explain why it would be useful</li> </ul>"},{"location":"contributing/#3-contribute-code","title":"3. Contribute Code","text":"<p>If you want to contribute code:</p> <ol> <li>Fork the repository  </li> <li>Create a new branch (e.g. <code>feature/led-module</code>)  </li> <li>Make your improvements  </li> <li>Test your code  </li> <li>Submit a Pull Request (PR)</li> </ol> <p>For code contributions:</p> <ul> <li>Keep your code readable  </li> <li>Add comments if necessary  </li> <li>Prefer meaningful commit messages instead of one large commit</li> </ul>"},{"location":"contributing/#4-write-documentation","title":"4. Write Documentation","text":"<p>Documentation is as valuable as code. You can help by:</p> <ul> <li>Updating files like <code>faq.md</code> or <code>about.md</code> </li> <li>Writing usage guides for new modules  </li> <li>Adding beginner-friendly setup guides</li> </ul>"},{"location":"contributing/#module-development-rules","title":"Module Development Rules","text":"<ul> <li>Each module should work independently  </li> <li>Input/output pins must be specified inside the <code>README.md</code> </li> <li>Include tested circuit diagrams  </li> <li>Organize code logically inside the <code>src/</code> folder</li> </ul>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<ul> <li>Please write a brief description for each PR  </li> <li>For major changes, opening an Issue beforehand is recommended  </li> <li>Your code should not break other components</li> </ul>"},{"location":"contributing/#communication-and-support","title":"Communication and Support","text":"<p>You can always reach out to us.  Email: support@bombdefusegame.org  Or contact us via GitHub Discussions or Issues.</p> <p>Thank you!  Your contributions help grow and improve the project!</p>"},{"location":"essentialcomponents/","title":"Required Parts","text":"<p>Below are the essential components used in this project:</p> <ul> <li>\ud83d\udd39 Arduino Uno or a compatible microcontroller board  </li> <li>\ud83d\udd39 5x5 LED Matrix Module </li> <li>\ud83d\udd39 Buttons (for switch modules)  </li> <li>\ud83d\udd39 Buzzer (for audible alerts)  </li> <li>\ud83d\udd39 Accelerometer Sensors </li> <li>\ud83d\udd39 Wires and Breadboard </li> <li>\ud83d\udd39 3D Printed Parts (enclosures and mechanical components for modules)  </li> <li>\ud83d\udd39 Power Supply (USB cable or adapter)  </li> </ul> <p>Note: Detailed technical specs and purchase links will be shared here soon.</p>"},{"location":"essentialcomponents/#parts-used-in-the-project","title":"Parts Used in the Project","text":"Part Name Description Quantity Notes Arduino Uno Main microcontroller board As needed Arduino Nano Alternative microcontroller Optional Smaller form factor LED Colored LEDs Various Multiple colors available Button Tactile switch As needed Resistor 220\u03a9 As needed For LED protection Breadboard Circuit prototyping platform 1 Jumper Wires Connection cables Multiple 5x5 LED Matrix For maze and visual display 1 Buzzer Audible alert device 1 USB Cable For programming and power 1 PCB Printed Circuit Board Prototype For advanced modules <p>Tip: Always verify component compatibility before purchasing to ensure smooth assembly and operation.</p> <p>Happy building! </p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"faq/#1-what-is-the-purpose-of-this-project","title":"1. What is the purpose of this project?","text":"<p>This project is designed as an educational modular bomb defusal game. It can be used in hackathons, STEM education programs, and technical presentations.</p> <p>The modules (LEDs, switches, sensors, buzzers, etc.) provide real-time interactive gameplay.  You can develop your electronics, software, and problem-solving skills in a gamified environment!</p>"},{"location":"faq/#2-how-do-i-create-this-documentation-with-mkdocs","title":"2. How do I create this documentation with MkDocs?","text":"<p>1\ufe0f\u20e3 Create or edit the <code>mkdocs.yml</code> configuration file in the root directory of your project.  This file defines your site\u2019s title, theme, and navigation structure.</p> <p>2\ufe0f\u20e3 Place all your content as markdown files (<code>.md</code>) inside the <code>docs/</code> folder.  For example: <code>docs/index.md</code>, <code>docs/modules.md</code></p> <p>3\ufe0f\u20e3 Run the following command in your terminal or command prompt to start the local server:</p> <p>```bash mkdocs serve</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This project is an interactive bomb defusal game based on Arduino with physical modules.</p>"},{"location":"getting-started/#requirements","title":"Requirements","text":"<ul> <li>Arduino Uno  </li> <li>USB Cable  </li> <li>Basic components like LEDs, buzzers, buttons  </li> <li>A computer (Windows / Linux / Mac)  </li> </ul>"},{"location":"getting-started/#setup","title":"Setup","text":"<ol> <li>Download and install the Arduino IDE.  </li> <li>Install the required libraries.  </li> <li>Open the <code>main.ino</code> file and upload it to your Arduino board.  </li> </ol>"},{"location":"getting-started/#before-starting-gameplay","title":"Before Starting Gameplay","text":"<ul> <li>Make sure all modules are properly connected.  </li> <li>Verify that the LEDs are blinking correctly on each module.  </li> <li>Confirm that buttons and buzzers respond as expected.  </li> <li>Check the power supply and USB connection for stability.  </li> </ul> <p>Tip: Always double-check wiring before powering the system to avoid hardware damage. Test each module individually if possible to ensure proper operation before starting the game.</p> <p>If everything is set up correctly, you are ready to start defusing the bomb! Good luck! </p>"},{"location":"lisance-%26-sales/","title":"License and Sales Policy","text":"<p>This project is licensed under the MIT License for its software components. This license permits free use, copying, modification, and distribution of the software. However:</p> <p>The MIT License applies only to software files.</p> <p>Hardware components (such as circuit boards, modules, enclosures, etc.) are not covered under the MIT License. The manufacturing, sale, and distribution of physical products are subject to separate commercial terms and licensing agreements.</p>"},{"location":"lisance-%26-sales/#hardware-sales-policy","title":"Hardware Sales Policy","text":"<p>The sale of physical components related to this project is organized under the following categories:</p> <ul> <li>Enclosure Sales </li> <li>Circuit Board Sales </li> <li>Complete Module Sales </li> <li>Multi-Module Kit Packages </li> </ul> <p>For each sales option, detailed information about product contents, warranty conditions, and return policies can be found on the Buying Conditions page.</p> <p>The software is free and open-source, but physical modules and kits are commercial products.</p> <p>Thank you for supporting the Talk to Defuse project! </p>"},{"location":"support/","title":"Contact \u2013 Talk to Defuse","text":"<p>Feel free to reach out to us with any questions, suggestions, feedback, or collaboration inquiries!</p>"},{"location":"support/#technical-support","title":"Technical Support","text":"<p>If you are having issues with game setup, modules, or software:</p> <ul> <li>Go to Troubleshooting Page </li> <li>Or report an issue via GitHub Issues: Report on GitHub</li> </ul>"},{"location":"support/#community-chat","title":"Community &amp; Chat","text":"<p>To discuss ideas about the project, talk about new modules, or stay updated:</p> <ul> <li>Discord Server: discord.gg/talktodefuse </li> <li>Reddit Community (optional): r/TalkToDefuse</li> </ul>"},{"location":"support/#sales-collaboration","title":"Sales &amp; Collaboration","text":"<p>For kit orders, bulk purchases, or sponsorships:</p> <ul> <li>Email: support@talktodefuse.com </li> <li>Sales page: Explore Full Modules for Sale</li> </ul>"},{"location":"support/#contribute","title":"Contribute","text":"<p>Join the open source community!</p> <ul> <li>GitHub Repository </li> <li>Want to add a new module? Contact us!</li> </ul> <p>Note: The project is continuously updated. Stay tuned on GitHub and Discord for the latest information.</p>"},{"location":"support/#warranty-returns-support","title":"Warranty, Returns &amp; Support","text":""},{"location":"support/#warranty","title":"Warranty","text":"<p>All Talk to Defuse modules come with a minimum 6-month warranty starting from the purchase date. This warranty covers manufacturing defects and functional failures under normal use.</p> <ul> <li>Excluded from warranty: </li> <li>Physical damage due to misuse  </li> <li>Damage caused by accidents, water, or other external factors  </li> <li>Unauthorized modifications  </li> </ul>"},{"location":"support/#returns","title":"Returns","text":"<p>You have the right to return products within 14 days of delivery for any reason. Returned items must be in their original packaging, unused, and undamaged.</p> <ul> <li>To initiate a return, please contact our support team via email at <code>support@talktodefuse.com</code>.  </li> <li>Return shipping costs are the responsibility of the customer unless the product is defective.  </li> <li>Refunds will be processed within 7 business days after receiving and inspecting the returned product.</li> </ul>"},{"location":"support/#technical-support-repairs","title":"Technical Support &amp; Repairs","text":"<p>We provide ongoing technical support for all products purchased:</p> <ul> <li>Support inquiries can be sent via email at <code>support@talktodefuse.com</code>.  </li> <li>We offer repair or replacement services under warranty conditions.  </li> <li>For issues outside warranty, repair services are available for a fee.  </li> <li>Spare parts such as LEDs, keypads, and sensors can be ordered separately.</li> </ul>"},{"location":"support/#additional-services","title":"Additional Services","text":"<ul> <li>Customized modifications and upgrades may be available upon request.  </li> <li>Bulk purchase support and special pricing for educational institutions and hackathons.</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>This page contains common issues you might encounter with the Talk to Defuse project and their solutions. If you cannot find a solution here, please contact us via the Contact page. </p>"},{"location":"troubleshooting/#installation-issues","title":"Installation Issues","text":""},{"location":"troubleshooting/#error-during-mkdocs-installation","title":"Error During MkDocs Installation","text":"<ul> <li>Make sure Python is installed and up to date.  </li> <li>Run the command <code>pip install mkdocs mkdocs-material</code> again.  </li> <li>Ensure that the <code>mkdocs.yml</code> file exists in the directory where you run the <code>mkdocs</code> command.  </li> </ul>"},{"location":"troubleshooting/#development-server-wont-start","title":"Development Server Won't Start","text":"<ul> <li>If you get the error <code>\"Config file 'mkdocs.yml' does not exist\"</code> when running <code>mkdocs serve</code>, make sure you are in the project root directory.  </li> <li>Check that the <code>mkdocs.yml</code> file name and extension are correct.  </li> </ul>"},{"location":"troubleshooting/#documentation-issues","title":"Documentation Issues","text":""},{"location":"troubleshooting/#pages-not-showing-or-are-blank","title":"Pages Not Showing or Are Blank","text":"<ul> <li>Verify that the file names listed under the <code>nav</code> section in <code>mkdocs.yml</code> exactly match the file names in the <code>docs</code> folder.  </li> <li>Make sure files have the <code>.md</code> extension and are located in the correct folder.  </li> </ul>"},{"location":"troubleshooting/#links-not-working","title":"Links Not Working","text":"<ul> <li>Check that internal links and <code>nav</code> paths are correctly written.  </li> <li>Pay attention to spaces and case sensitivity in file names.  </li> </ul>"},{"location":"troubleshooting/#hardware-module-issues","title":"Hardware Module Issues","text":""},{"location":"troubleshooting/#module-not-working","title":"Module Not Working","text":"<ul> <li>Double-check your Arduino wiring and pin configurations.  </li> <li>Make sure the module code is properly uploaded.  </li> <li>Review the circuit diagrams in the module documentation if needed.  </li> </ul>"},{"location":"troubleshooting/#led-or-button-not-responding","title":"LED or Button Not Responding","text":"<ul> <li>Check the power supply.  </li> <li>Verify cables are properly connected and intact.  </li> <li>Look for error messages in the Arduino Serial Monitor.  </li> </ul>"},{"location":"troubleshooting/#sales-and-order-issues","title":"Sales and Order Issues","text":""},{"location":"troubleshooting/#my-order-hasnt-arrived-or-is-damaged","title":"My Order Hasn't Arrived or Is Damaged","text":"<ul> <li>Please check our Buying Conditions page.  </li> <li>Contact us via the Contact page for support.  </li> </ul>"},{"location":"troubleshooting/#payment-issues","title":"Payment Issues","text":"<ul> <li>There might be problems with your credit card or payment platform.  </li> <li>Please contact your bank or payment provider.  </li> </ul>"},{"location":"troubleshooting/#other-issues","title":"Other Issues","text":""},{"location":"troubleshooting/#software-issues","title":"Software Issues","text":"<ul> <li>Check the Contributing page in our GitHub repository to report bugs or get help.  </li> </ul>"},{"location":"troubleshooting/#missing-or-incorrect-documentation","title":"Missing or Incorrect Documentation","text":"<ul> <li>Please contact us, we are continuously working to improve the docs.  </li> </ul>"},{"location":"troubleshooting/#help-and-support","title":"Help and Support","text":"<p>If the above solutions don\u2019t resolve your problem, please reach out to us via the Contact page. We are happy to assist you! </p> <p>Talk to Defuse Project Team </p>"},{"location":"usage/","title":"User Guide","text":"<p>Talk to Defuse provides the steps and important points you need to follow while setting up and playing the game. \ud83d\ude80</p>"},{"location":"usage/#setup","title":"Setup","text":""},{"location":"usage/#hardware-requirements","title":"Hardware Requirements","text":"<ul> <li>Arduino UNO or compatible microcontroller  </li> <li>LED Modules (for visual feedback)  </li> <li>Buttons (for user inputs)  </li> <li>Buzzer (for warning and alarm sounds)  </li> <li>Breadboard and jumper wires (for easy connections)  </li> </ul>"},{"location":"usage/#software-requirements","title":"Software Requirements","text":"<ul> <li>Arduino IDE (to upload code)  </li> <li>Python (optional, for module simulations)  </li> </ul>"},{"location":"usage/#starting-up","title":"Starting Up","text":"<ol> <li>Open the Arduino codes in the <code>code/</code> folder and upload them to the microcontroller using Arduino IDE.  </li> <li>Make hardware connections according to the Basic Parts guide.  </li> <li>Turn on the main module\u2019s power supply; the game will start automatically.  </li> <li>Follow the instructions shown in the terminal or serial monitor and start playing.  </li> </ol>"},{"location":"usage/#gameplay","title":"Gameplay","text":"<ul> <li>Each module represents a unique task.  </li> <li>Incorrect actions trigger the buzzer warning and a time penalty.  </li> <li>Goal: Complete all modules correctly and defuse the bomb on time.  </li> <li>Good communication and coordination are very important!  </li> </ul>"},{"location":"usage/#tips-and-strategies","title":"Tips and Strategies","text":"<ul> <li> <p>Simon Says Module:   Carefully follow the color sequences and repeat them in the correct order. Mistakes mean penalties!  </p> </li> <li> <p>Morse Code Solution:   Decode light and sound signals using the Morse code alphabetical table. Be patient!  </p> </li> <li> <p>Key Module:   Turn the key in the correct order. Use trial and error to find the combination.  </p> </li> <li> <p>Time Management:   Time is limited; make quick and accurate decisions.  </p> </li> <li> <p>Communication:   Helper players should give clear and understandable instructions. Team harmony is the key to success!  </p> </li> </ul>"},{"location":"usage/#troubleshooting","title":"Troubleshooting","text":"<ul> <li> <p>Module Not Responding:   Check connections and power supply. Ensure the code is properly uploaded.  </p> </li> <li> <p>Sound or Light Not Working:   Double-check buzzer and LED connections. The part might be faulty.  </p> </li> <li> <p>Coding Errors:   Review error messages in Arduino IDE and verify libraries.  </p> </li> </ul>"},{"location":"usage/#more-resources","title":"More Resources","text":"<ul> <li>Hardware details: Basic Parts </li> <li>Module guides: Modules </li> <li>Community &amp; contributions: Contribution Guide </li> </ul> <p>Have fun! The Talk to Defuse Team </p>"},{"location":"modules/main-module/","title":"Main Module","text":"<p>The Main Module is the central control unit of the Talk to Defuse modular bomb defusal game. It manages communication with all modules, oversees game flow, user interaction, and timing mechanics. From boot-up to victory or failure, the main module ensures everything runs in sync.</p>"},{"location":"modules/main-module/#circuit-diagram","title":"Circuit Diagram","text":""},{"location":"modules/main-module/#features","title":"Features","text":"<ul> <li>Status Indicator: 3 RGB LEDs that change color depending on game state.</li> <li>Lives Display: 3 red LEDs indicate player lives. Each mistake turns one off.</li> <li>Power Switch: Main on/off switch for the system.</li> <li>Countdown Timer: Displays remaining time using a 4-digit 7-segment display.</li> <li>LCD Screen: Displays user interface elements like difficulty selection and serial number.</li> <li>Control Button: Used to navigate options and start/stop the game.</li> </ul>"},{"location":"modules/main-module/#components","title":"Components","text":"Component Description Link Qty Red LED Dome type, 5mm direnc.net 3 RGB LED Common Anode, 5mm direnc.net 3 2x16 LCD Display Blue background, elegant UI direnc.net 1 Push Button Spring-based, non-latching direnc.net 1 TM1637 Clock Module Easy-to-use 4-digit display direnc.net 1 Buzzer Active, includes internal driver direnc.net 1 220\u03a9 Resistor Limits current to LEDs direnc.net 6 10K\u03a9 Resistor Used as pull-down for the button direnc.net 1 On-Off Switch Round, illuminated power switch direnc.net 1"},{"location":"modules/main-module/#software-architecture","title":"Software Architecture","text":"<ul> <li>Language: Arduino C++</li> <li>Structure: Central file is <code>main.ino</code></li> <li>Communication: I2C, where the Main Module is the Master, and other game modules are Slaves</li> </ul>"},{"location":"modules/main-module/#main-responsibilities","title":"Main Responsibilities","text":"<ul> <li>Game start, reset, and difficulty selection</li> <li>Countdown management based on total module requirements</li> <li>Displaying the serial number and game info on the LCD</li> <li>Monitoring module completion states</li> <li>Handling lives and time acceleration upon mistakes</li> </ul>"},{"location":"modules/main-module/#i2c-communication-protocol","title":"I2C Communication Protocol","text":"<ul> <li>Protocol: I2C</li> <li>Master: Main Module</li> <li>Slaves: Puzzle Modules (e.g., Switch, Simon, Wire, etc.)</li> <li>Addresses: Each module has a unique I2C address</li> </ul>"},{"location":"modules/main-module/#command-signals","title":"Command Signals","text":"<ul> <li><code>RESP_START_ERR</code>: Checks whether modules are in their initial state  </li> <li><code>RESP_SOLVED</code>: Indicates a module has been solved  </li> <li><code>RESP_MISTAKE</code>: Indicates a mistake occurred  </li> <li><code>RESP_ERROR</code>: General error state</li> </ul>"},{"location":"modules/main-module/#time-management","title":"\u23f1 Time Management","text":"<ul> <li>Time is tracked using Arduino\u2019s <code>millis()</code> function</li> <li>Remaining time is displayed on TM1637</li> <li>Each mistake speeds up the countdown by 10%</li> <li>When timer reaches 0, the game ends</li> </ul>"},{"location":"modules/main-module/#game-flow","title":"Game Flow","text":"<ol> <li>System powers on and the LCD shows startup screen.</li> <li>Main Module checks if all modules are in their initial states.</li> <li>Player selects a difficulty level using the button.</li> <li>Holding the button starts the countdown and begins the game.</li> <li>The game monitors each module's status via I2C.</li> <li>Mistakes reduce lives and accelerate time.</li> <li>If all modules report \u201csolved\u201d, the game is won.</li> <li>If time runs out or all lives are lost, the game is lost.</li> </ol>"},{"location":"modules/main-module/#game-states","title":"Game States","text":""},{"location":"modules/main-module/#1-initialization","title":"1. Initialization","text":"<ul> <li>Game waits until all modules report they are in a valid starting state (e.g., switches OFF).</li> <li>If any module sends <code>RESP_START_ERR</code>, the system remains in this state.</li> </ul>"},{"location":"modules/main-module/#2-pre-game","title":"2. Pre-Game","text":"<ul> <li>Player chooses a difficulty level:</li> <li>Easy: Long timer, 3 lives  </li> <li>Hard: Shorter timer, 3 lives  </li> <li>Expert: No timer visible, no lives</li> </ul>"},{"location":"modules/main-module/#3-gameplay","title":"3. Gameplay","text":"<ul> <li>Timer begins  </li> <li>Monitors <code>RESP_MISTAKE</code> and <code>RESP_SOLVED</code> from modules  </li> <li>On completion, returns to Initialization mode  </li> <li>Holding the button during the game resets to Initialization</li> </ul>"},{"location":"modules/main-module/#expandability","title":"Expandability","text":"<ul> <li>New modules can be added by assigning a new I2C address and handling logic</li> <li>Each module contains its own solution algorithm</li> <li>The main module only evaluates the result</li> </ul>"},{"location":"modules/modules-list/","title":"Module List","text":"<p>This document outlines the current modules available in the Talk to Defuse modular defusal game. Each module represents a unique challenge and interacts with real hardware components.</p>"},{"location":"modules/modules-list/#main-module","title":"\ud83d\udd39 Main Module","text":"<p>Responsible for coordinating all other modules, managing the countdown timer, displaying defusal status, and serving as the central communication hub between the player and hardware.</p>"},{"location":"modules/modules-list/#switch-module","title":"\ud83d\udd39 Switch Module","text":"<p>A logic-based challenge that requires the player to flip the correct combination of switches based on color-coded or numerical clues.</p>"},{"location":"modules/modules-list/#simon-module","title":"\ud83d\udd39 Simon Module","text":"<p>A memory game that plays a sequence of lights and sounds which the player must repeat in the correct order. Each round increases in complexity.</p>"},{"location":"modules/modules-list/#morse-code-module","title":"\ud83d\udd39 Morse Code Module","text":"<p>This module presents a flashing LED that blinks Morse code. The player must decode the signal and input the correct word using buttons or switches.</p> <p>More modules are under development and will be added in future updates.</p>"},{"location":"modules/morse-code/","title":"Morse Code Module","text":""},{"location":"modules/morse-code/#morse-code-module","title":"Morse Code Module","text":"<p>Morse Code </p> <p>This module contains a buzzer, an LED, and a button. Messages are transmitted via Morse code using the buzzer and LED. When the correct code is entered in Morse code according to the defusal document, the module is defused.</p>"},{"location":"modules/morse-code/#electronic-details","title":"Electronic Details","text":""},{"location":"modules/morse-code/#materials","title":"Materials","text":"Component Details Link Quantity RGB LED Diffused, 5mm, 1 status LED, others for indication https://www.direnc.net/5mm-rgb-led-ortak-anot-4-pin 3 220\u03a9 Resistor Current limiting resistor for LEDs https://www.direnc.net/220r-18w-direnc 12 10K\u03a9 Resistor Pull-down resistor for button https://www.direnc.net/10k-14w-direnc 1 Buzzer Active buzzer for Morse code sound https://www.elektronikmalzeme.com/5-12v-aktif-sesli-buzzer-devreli 1 Button For entering Morse code 1"},{"location":"modules/morse-code/#gameplay","title":"Gameplay","text":"<p>Communication in this module is done through beeps. The module sends you a word in Morse code; you decode the word, find the corresponding answer in the document, and send the new word back to the module using Morse code. Each short and long beep represents a correct letter; however, even the slightest rhythm mistake can quickly cause confusion. Waiting too long or rushing can lead to disaster instead of a solution. This module requires clarity\u2014hesitation could be costly.</p>"},{"location":"modules/morse-code/#defusal","title":"Defusal","text":"<p>Press the button once to receive the Morse signal. Listen carefully and decode the code using the document. Then enter the correct code back into the module via Morse code. A new Morse signal will then start; decode it and enter the correct message into the module again. Continue until the module\u2019s status indicator lights green.</p>"},{"location":"modules/simon/","title":"Simon Says Module","text":"<p>Simon Says  Contains 4 spring-loaded push buttons and 1 RGB LED. The player repeats the lit sequence in order. Each correct repetition extends the sequence. The sequence length increases further depending on the difficulty level.</p>"},{"location":"modules/simon/#electronic-details","title":"Electronic Details","text":""},{"location":"modules/simon/#materials","title":"Materials","text":"Component Details Link Quantity Push Button Spring-loaded, colored https://www.elektronikmalzeme.com/12mm-yayli-push-buton-mavi 4 RGB LED Diffused, 5mm, 1 status LED, others for game https://www.direnc.net/5mm-rgb-led-ortak-anot-4-pin 4 220\u03a9 Resistor Current limiting resistor for LEDs https://www.direnc.net/220r-18w-direnc 12 10K\u03a9 Resistor Pull-down resistor for buttons https://www.direnc.net/10k-14w-direnc 4 Passive Buzzer Passive buzzer to play different tones https://www.direnc.net/12mm-aktif-buzzer-5v-12v-devreli 1"},{"location":"modules/simon/#gameplay","title":"Gameplay","text":"<p>This module tests rhythm, memory, and attention. The LEDs in the center show you a color sequence. Your task is to remember and press the buttons in the same order. Each correct input adds a new color to the chain; the module asks for a little more each time. But be careful: if you remember even one color incorrectly, the module becomes displeased. Also, waiting too long or hesitating will test its patience. The colors are clear, the rules simple, but even simple things can get complicated under pressure.</p>"},{"location":"modules/simon/#defusal","title":"Defusal","text":"<p>Press the green button to start. The LED will show the sequence in different colors. Press the buttons in the correct order according to the sequence. When you finish pressing, a new color will be added to the sequence. You will hear a beep for each color. Colors without beep sounds are not counted in the sequence.</p> <p>If you wait too long, the module assumes you forgot the sequence and punishes you by restarting it from the beginning. When the status LED turns green, the module is defused and goes silent, but if you keep pressing buttons unnecessarily, you may disturb this peace.</p>"},{"location":"modules/switch/","title":"Switch Panel Module","text":"<p>Contains 4 toggle switches and 3 LEDs. Depending on the position of each switch, the LEDs change color. If all switches remain in the required position for a while, the module is defused.</p>"},{"location":"modules/switch/#electronic-details","title":"Electronic Details","text":""},{"location":"modules/switch/#materials","title":"Materials","text":"Component Details Link Qty Toggle Switch 3-pin On-Off toggle https://www.direnc.net/kts102-on-off-3-ayak-toggle 4 RGB LED Diffused, 5mm. One for status, others for switch feedback https://www.direnc.net/5mm-rgb-led-ortak-anot-4-pin 4 220\u03a9 Resistor Current limiting resistor for LEDs https://www.direnc.net/220r-18w-direnc 12 10K\u03a9 Resistor Pull-down resistor for switches https://www.direnc.net/10k-14w-direnc 4"},{"location":"modules/switch/#component-functions","title":"Component Functions","text":"<ol> <li>Status LED: Shows module status with colors \u2014 blue for ready, red blinking for error, green for solved.</li> <li>Switch LEDs: Light up in different colors according to the puzzle's progress.</li> <li>Switches: Must be set to correct positions as per the solution guide to defuse the module.</li> </ol> <p>Note: Only two pins of each switch are connected. Arduino Pro Mini analog pins are used as digital inputs.</p>"},{"location":"modules/switch/#circuit-diagram","title":"Circuit Diagram","text":"<p>(Insert circuit diagram image here)</p>"},{"location":"modules/switch/#gameplay","title":"Gameplay","text":"<p>This module requires careful attention. You need to set the 4 switches in the correct sequence to achieve specific LED color combinations. Each color change represents progression. Wrong switch positions may reset progress or cause penalties.</p>"},{"location":"modules/switch/#rules","title":"Rules","text":"<ul> <li>Always toggle switches in order.</li> <li>Changing multiple switches at once can cause instant failure.</li> <li>Repeated mistakes reduce module patience.</li> </ul>"},{"location":"modules/switch/#step-1","title":"Step 1","text":"<ul> <li>If no LEDs are lit:</li> <li> <p>Turn ON switches 1 and 2.</p> <ul> <li>If first two LEDs turn red, turn OFF switch 1 and proceed to Step 2.</li> <li>If first LED turns blue, turn OFF switch 2 and turn ON switch 4, then proceed to Step 2.</li> </ul> </li> <li> <p>If only one LED is lit:</p> </li> <li> <p>Turn ON switch 2.</p> <ul> <li>If all LEDs light, proceed to Step 2.</li> <li>If lit LED changes or another lights, turn OFF switch 2 and turn ON switch 4, then proceed to Step 2.</li> </ul> </li> <li> <p>If LED1 and LED2 are blue and LED3 is green:</p> </li> <li>Turn ON all switches in this order: 1, 3, 4, 2.<ul> <li>If LED1 turns red when turning ON switch 3, turn OFF switch 1 and proceed to Step 2.</li> <li>Otherwise, turn OFF all switches in the same order. Failure to do so costs 30% of remaining time but you still proceed to Step 2.</li> </ul> </li> </ul>"},{"location":"modules/switch/#step-2","title":"Step 2","text":"<ul> <li>If any LED is red:</li> <li> <p>Toggle all switches to the opposite positions.</p> <ul> <li>If LED1 blinks, toggle switches 3 and 4.</li> <li>If LED2 blinks, toggle switches 1 and 4.</li> </ul> </li> <li> <p>If LED1 is green and LED2 is blue:</p> </li> <li> <p>Toggle all switches.</p> <ul> <li>If LED colors swap, toggle switches 1 and 3.</li> <li>If no change, toggle switches 1 and 2.</li> </ul> </li> <li> <p>If no LEDs light:</p> </li> <li>Toggle all switches.<ul> <li>If all LEDs blink, toggle switches 1, 2, and 3.</li> <li>If one LED turns green, toggle switch 4.</li> <li>If one LED turns red, toggle switch 2.</li> </ul> </li> </ul> <p>Tip: Be patient and precise. Avoid toggling multiple switches simultaneously to prevent failure.</p>"},{"location":"sales/buying-conditions/","title":"Purchase Conditions \u2013 Talk to Defuse","text":"<p>This page provides information about the sales process of physical modules, component kits, and written content.</p>"},{"location":"sales/buying-conditions/#what-can-you-purchase","title":"What Can You Purchase?","text":"<ul> <li> <p>Module Kits   Each carefully prepared physical module compatible with the game (LED matrix, Simon Says, switch, lock module, etc.)</p> </li> <li> <p>Starter Kit   Comes with an Arduino board, connection cables, and basic components. Easy to set up.</p> </li> <li> <p>Expansion Packs   Includes new game modules, spare parts, and special mods developed by the community.</p> </li> </ul>"},{"location":"sales/buying-conditions/#purchase-methods","title":"Purchase Methods","text":"<ul> <li> <p>Individual Purchases:   Can be made via our website or through partnered platforms using credit/debit cards.</p> </li> <li> <p>Bulk Orders &amp; Educational Institutions:   Discounted prices for a minimum order of 5 kits. Please contact us: sales@talktodefuse.com</p> </li> <li> <p>International Orders:   If you want to order from outside Turkey, please contact us for information regarding customs and shipping fees.</p> </li> </ul>"},{"location":"sales/buying-conditions/#shipping-delivery","title":"Shipping &amp; Delivery","text":"<ul> <li>Domestic shipping time: 3\u20137 business days  </li> <li>International delivery time: 7\u201321 business days  </li> <li>Tracking number will be sent via email after the order is shipped.</li> </ul>"},{"location":"sales/buying-conditions/#return-exchange-policy","title":"Return &amp; Exchange Policy","text":"<ul> <li>Returns are possible within 14 days after product delivery.  </li> <li>Returned products must have complete packaging and contents.  </li> <li>We offer a replacement guarantee for physically damaged products.  </li> </ul> <p>For details about Warranty and Technical Support, please check our Warranty &amp; Support Page.</p>"},{"location":"sales/buying-conditions/#additional-information","title":"Additional Information","text":"<ul> <li>The kit you order works fully integrated with the game. Code and documents are published as open source on GitHub.  </li> <li>A short installation guide is included with every product.</li> </ul> <p>\ud83d\udcce For the latest prices and stock status, please visit our Full Modules page.</p>"},{"location":"sales/kits/","title":"Kit Sales","text":"<p>This page contains sales information about physical module kits for the Talk to Defuse game.</p>"},{"location":"sales/kits/#available-kits","title":"Available Kits","text":"Kit Name Content Summary Price (TRY) Stock Status Starter Kit Includes Simon Says, Switch, and Buzzer modules plus Main Control Board and USB programming cable 749 TRY \u2714\ufe0f In Stock Advanced Kit Starter Kit modules + Labyrinth, Morse Code modules, 3D Printed Outer Case, Arduino Nano Board 1,499 TRY \u2714\ufe0f In Stock Educational Kit Complete set of all modules (10+), tutorial booklets (TR &amp; EN), posters, and quick-start guides 1,999 TRY \ud83d\udd04 Low Stock Hackathon Set 10+ modules, 3 kits for teams, carrying cases 4,999 TRY \u274c Sold Out"},{"location":"sales/kits/#kit-content-details","title":"Kit Content Details","text":""},{"location":"sales/kits/#starter-kit-includes","title":"Starter Kit Includes:","text":"<ul> <li>Simon Says Module: Color sequence memory game that tests your reflexes and memory.</li> <li>Switch Module: Button puzzle where players solve switch combinations.</li> <li>Buzzer Module: Sound alert system for feedback during gameplay.</li> <li>Main Control Board: Arduino Uno compatible board controlling the modules.</li> <li>USB Programming Cable: For easy uploading of software to the Arduino.</li> </ul>"},{"location":"sales/kits/#advanced-kit-includes","title":"Advanced Kit Includes:","text":"<ul> <li>All Starter Kit modules.</li> <li>Labyrinth Module: Tilt sensor puzzle requiring steady hands and precision.</li> <li>Morse Code Module: Decoding Morse signals with interactive LED and buzzer feedback.</li> <li>3D Printed Outer Case: Durable and sleek housing for all modules.</li> <li>Arduino Nano Board: Smaller, compact microcontroller alternative.</li> <li>Additional jumper wires and connectors.</li> </ul>"},{"location":"sales/kits/#educational-kit-includes","title":"Educational Kit Includes:","text":"<ul> <li>Full set of all modules (10+ modules including the above and more).</li> <li>Step-by-step tutorial booklets in Turkish and English.</li> <li>Educational posters for classroom or workshop use.</li> <li>Quick-start guides for easy setup.</li> <li>Carrying case for easy transport.</li> </ul>"},{"location":"sales/kits/#hackathon-set-includes","title":"Hackathon Set Includes:","text":"<ul> <li>More than 10 modules, ideal for teams.</li> <li>Three complete kits in one package.</li> <li>Carrying case with compartments.</li> <li>Perfect for competitive and collaborative environments.</li> </ul>"},{"location":"sales/kits/#shipping-information","title":"Shipping Information","text":"<ul> <li>Flat shipping fee of 59 TRY within Turkey.</li> <li>Free shipping for orders over 1,000 TRY.</li> <li>Delivery usually takes 2-4 business days.</li> </ul>"},{"location":"sales/kits/#payment-methods","title":"Payment Methods","text":"<ul> <li>Credit/Debit Card</li> <li>Bank Transfer (EFT)</li> <li>Cash on Delivery (only in Istanbul)</li> </ul>"},{"location":"sales/kits/#additional-module-orders","title":"Additional Module Orders","text":"<p>Modules can also be purchased individually. Please check our Module Catalog for more information.</p>"},{"location":"sales/kits/#orders-contact","title":"Orders &amp; Contact","text":"<p>You can place orders via:</p> <ul> <li>Email: <code>sales@talktodefuse.com</code></li> <li>Instagram: @talktodefuse</li> <li>GitHub Discussions: Ask the Community</li> </ul>"},{"location":"sales/kits/#notes","title":"Notes","text":"<ul> <li>Prices include 20% VAT.</li> <li>All modules come with a warranty.</li> <li>Special discounts available for educational institutions.</li> </ul> <p>Thank you for choosing Talk to Defuse! We are here to support your learning and gaming experience.</p>"},{"location":"sales/outer-case/","title":"Outer Case Sales","text":"<p>The Outer Case for the modular Talk to Defuse game is specially designed to securely and aesthetically house the hardware components. Portability and easy assembly are prioritized.</p>"},{"location":"sales/outer-case/#product-features","title":"Product Features","text":"<ul> <li>Material: 3D printed PLA+, durable laser-cut acrylic, or injection-molded options  </li> <li>Dimensions: 20x25x10 cm (adjustable based on module slots)  </li> <li>Connections: Magnetic or screw-in module slots  </li> <li>Surface: Matte or glossy black finish with customizable logo area  </li> <li>Assembly: Tool-free (no tools required) installation option  </li> </ul>"},{"location":"sales/outer-case/#package-contents","title":"Package Contents","text":"<ul> <li>1 Outer Case (front, back, and side panels included)  </li> <li>Module slots (8 pieces)  </li> <li>Mounting accessories (screws, magnets, etc.)  </li> <li>Cable organizers  </li> <li>Assembly guide (PDF and video link)  </li> </ul>"},{"location":"sales/outer-case/#compatible-modules","title":"\ud83d\udd0c Compatible Modules","text":"<p>The following modules can be mounted inside the Outer Case:</p> <ul> <li>Simon Says Module  </li> <li>Switch Panel  </li> <li>Morse Code Module  </li> <li>Buzzer/LED Alarm  </li> <li>Labyrinth Module  </li> <li>Digital Display (LCD/OLED)  </li> <li>Case Lock Module  </li> <li>Accelerometer Module  </li> </ul>"},{"location":"sales/outer-case/#pricing","title":"Pricing","text":"Version Price (TRY) Description Standard PLA+ 349 \u20ba 3D printed, basic configuration Acrylic Laser 449 \u20ba Transparent/colored panels Custom Print 499 \u20ba Personalized logo, color, or size With Kit Bundle 299 \u20ba Discounted price for bulk purchase <p>Shipping and assembly videos are included in the price. International shipping costs extra.</p>"},{"location":"sales/outer-case/#purchase-stock-status","title":"Purchase &amp; Stock Status","text":"<ul> <li>Stock Status: Made-to-order production. Average production time is 3-5 business days.  </li> <li>Purchase: To order, please check our Buying Conditions page or contact us at <code>info@talktodefuse.com</code>.</li> </ul>"},{"location":"sales/outer-case/#visuals-technical-drawings","title":"Visuals &amp; Technical Drawings","text":"<ul> <li>3D Model File (.STL) </li> <li>Technical Drawing (.PDF) </li> <li>Assembly Video (YouTube)</li> </ul>"},{"location":"sales/overview/","title":"General Sales Policies","text":"<p>Below are the general policies regarding the sale of all physical products offered under the Talk to Defuse project. Our goal is to provide our customers with a transparent, reliable, and satisfaction-focused shopping experience.</p>"},{"location":"sales/overview/#payment-methods","title":"Payment Methods","text":"<ul> <li>Credit/Debit Cards (Visa, MasterCard, American Express)  </li> <li>Bank Transfer (Wire Transfer/EFT)  </li> <li>Cash on Delivery (Available only in certain regions)  </li> <li>Digital Wallets (e.g., PayPal, iyzico)  </li> </ul> <p>All payment transactions are processed via a secure payment infrastructure, and your credit card details are never shared with us.</p>"},{"location":"sales/overview/#order-and-delivery-process","title":"Order and Delivery Process","text":"<ul> <li>Orders are shipped within 1-3 business days after being received.  </li> <li>Delivery usually takes between 3-7 business days.  </li> <li>A tracking number will be sent to your email once your order has been dispatched.  </li> <li>International shipping times and conditions may vary.</li> </ul>"},{"location":"sales/overview/#warranty-and-return-policy","title":"Warranty and Return Policy","text":""},{"location":"sales/overview/#warranty","title":"Warranty","text":"<ul> <li>Talk to Defuse hardware products come with a 12-month warranty from the date of purchase.  </li> <li>Warranty covers manufacturing defects and functional failures.  </li> <li>Mechanical damage, misuse, and natural disasters are not covered under warranty.</li> </ul>"},{"location":"sales/overview/#returns","title":"Returns","text":"<ul> <li>You have the right to return products unconditionally within 14 days of delivery.  </li> <li>Returned products must be in their original packaging, unused and undamaged.  </li> <li>Please contact us to initiate the return process. Return shipping costs are the responsibility of the buyer.  </li> <li>For warranty issues, repair or replacement services will be provided.</li> </ul>"},{"location":"sales/overview/#customer-support","title":"Customer Support","text":"<ul> <li>For any questions, suggestions, or support requests before or after purchase, feel free to contact us.  </li> <li>Email: support@talktodefuse.com  </li> <li>Phone: +90 555 123 4567  </li> <li>Working Hours: Monday to Friday, 09:00 - 18:00  </li> </ul>"},{"location":"sales/overview/#privacy-policy","title":"Privacy Policy","text":"<ul> <li>Customer information is kept confidential and not shared with third parties.  </li> <li>Payment details are protected with SSL security protocols.</li> </ul>"},{"location":"sales/overview/#frequently-asked-questions-faq","title":"Frequently Asked Questions (FAQ)","text":"<p>For more information, please visit our Buying Conditions page.</p> <p>At Talk to Defuse, trust and satisfaction are our top priorities in your shopping experience.</p>"},{"location":"sales/pcbs/","title":"PCB Sales","text":"<p>In this section, you can find the sales details for the Printed Circuit Boards (PCBs) offered as part of the Talk to Defuse project.</p>"},{"location":"sales/pcbs/#package-contents","title":"Package Contents","text":"<p>The following PCBs are manufactured and shipped upon order:</p> PCB Module Description Dimensions Version Stock Status Main Board (Main PCB) Central circuit board controlling all modules 100mm x 80mm v1.2 \u2714 In Stock Morse Code Module Special PCB for decoding Morse signals 60mm x 40mm v1.0 \u2714 In Stock Simon Says Module Dedicated circuit board for color and sequence game 70mm x 50mm v1.1 \u2714 In Stock Switch Module Used for the key puzzle mini-game 50mm x 40mm v1.0 \u274c Sold Out Labyrinth Module PCB with tilt sensor for labyrinth solving 65mm x 45mm v1.0 \u2714 In Stock"},{"location":"sales/pcbs/#pricing","title":"Pricing","text":"<p>All PCBs are carefully manufactured and quality-checked. Unit prices are listed below:</p> <ul> <li>Main Board: 220 \u20ba  </li> <li>Morse Code Module: 100 \u20ba  </li> <li>Simon Says Module: 110 \u20ba  </li> <li>Switch Module: 90 \u20ba  </li> <li>Labyrinth Module: 115 \u20ba  </li> </ul> <p>Discounts may apply for bulk orders. Please contact us via the Contact page.</p>"},{"location":"sales/pcbs/#delivery-shipping","title":"Delivery &amp; Shipping","text":"<ul> <li>PCBs are shipped within 3 business days after the order is confirmed.  </li> <li>Domestic shipping within Turkey is free of charge.  </li> <li>For international shipping, please review the Buying Conditions page.</li> </ul>"},{"location":"sales/pcbs/#technical-documentation","title":"Technical Documentation","text":"<p>Detailed circuit diagrams and Gerber files for each PCB can be found at the links below:</p> <ul> <li>Main PCB Technical Details </li> <li>Morse Module Details </li> <li>Simon Says Module </li> <li>Switch Module </li> <li>Labyrinth Module </li> </ul>"}]}